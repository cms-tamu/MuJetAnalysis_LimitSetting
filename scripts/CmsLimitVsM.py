import math
from math import *

def fCmsLimitVsM(m):
  #M = 0.315
  #LimitMin = 3.08
  #LimitMax = 8.55
  #if False:
  #  print "M = ", M
  #  print "LimitMin = ", LimitMin
  #  print "LimitMax = ", LimitMax
  #  print "sigma = ", fCmsResolution(M)
  #  print "myGaus(M, M, fCmsResolution(M) ) = ", myGaus(M, M, fCmsResolution(M) )
  #  print "LimitMax-LimitMin/myGaus[M,M,sigma(M)]/sigma(M)sqrt(2pi) = ", (LimitMax - LimitMin)/myGaus(M, M, fCmsResolution(M) )/fCmsResolution(M)/sqrt(2.0*pi)
  #  print "1/2/sigma(M)^2 = ", 1.0/2.0/fCmsResolution(M)/fCmsResolution(M)
  #  print "Err: " + str(LimitMin + (LimitMax - LimitMin)*myGaus(m, M, fCmsResolution(M) )/myGaus(M, M, fCmsResolution(M) ))
  #return LimitMin + (LimitMax - LimitMin)*myGaus(m, M, fCmsResolution(M) )/myGaus(M, M, fCmsResolution(M) )
#****************************************
#Minimizer is Linear
#Chi2                      =     0.262144
#NDf                       =           42
#p0                        =      2.93472   +/-   0.0120479  
  return 3.03;
  #return 0.13*exp(-0.5*((m-0.4)/0.13)**2)+ 3.03;
  #return 0.35*exp(-0.5*((m-0.55)/0.06)**2)+3.023;
  #return 0.23*exp(-0.5*((m-0.45)/0.15)**2) + 0.2*exp(-0.5*((m-0.85)/0.15)**2) + 0.1*exp(-0.5*((m-1.1)/0.5)**2) + 3.05 + 1.5*exp(-0.5*((m-3.1)/0.05)**2)

def fCmsLimitVsM_explicit(m):
  A = 3.082
  B = 1.18
  C = 552.0
  M = 0.315
  return A + B*exp( -552*(m - M)*(m - M) )

def myGaus(x, mu, sigma):
  return 1/( sigma * sqrt(2.0*pi) ) * exp( - (x - mu)*(x - mu) / 2.0/sigma/sigma )

def fCmsResolution ( m ):
  return (0.13 + m*0.065)/5.0

def fCmsLimitVsM_HybridNew(m):
  if m >= 0.2113 and m <= 8.55:
    m_im1 = 0.2113
    m_i   = 0.2113
    for i in range(len(Limits_HybridNew)):
      m_i   = Limits_HybridNew[i][0]
      lim_i = Limits_HybridNew[i][1]
      if m == m_i:
        return lim_i
      elif m > m_im1 and m < m_i:
        a = (lim_i - lim_im1) / (m_i - m_im1)
        b = (lim_im1*m_i - lim_i*m_im1) / (m_i - m_im1)
        lim = a*m+b
        return lim
      m_im1 = m_i
      lim_im1 = lim_i

MGammaD_array = [0.2113,0.2200,0.2300,0.2400,0.2500,0.2600,0.2700,0.2800,0.2900,0.3000,0.3100,0.3200,0.3300,0.3400,0.3500,0.3600,0.3700,0.3800,0.3900,0.4000,0.4100,0.4200,0.4300,0.4400,0.4500,0.4600,0.4700,0.4800,0.4900,0.5000,0.6000,0.7000,0.8000,0.9000,1.0000,1.1000,1.2000,1.5000,2.0000,2.6000,2.7000,2.8000,2.9000,3.0000,3.1000,3.2000,3.3000,3.4000,3.7000,4.0000,5.0000,6.0000,7.0000,8.0000,8.5000]

Limits_HybridNew = [
#ORI bb in dia
[0.2113,3.01352068966],
[0.22,3.01482566667],
[0.23,3.02856],
[0.24,3.04842733333],
[0.25,2.98329133333],
[0.26,3.02560366667],
[0.27,3.08352055556],
[0.28,3.01009833333],
[0.29,2.97666233333],
[0.3,3.045001],
[0.31,2.98867],
[0.32,3.041128],
[0.33,3.01532633333],
[0.34,2.94355344828],
[0.35,3.040298],
[0.36,3.04063666667],
[0.37,3.03830655172],
[0.38,3.02907310345],
[0.39,3.01063724138],
[0.4,3.00320655172],
[0.41,2.99816551724],
[0.42,3.0061537931],
[0.43,2.98826068966],
[0.44,3.07034857143],
[0.45,3.03507206897],
[0.46,3.02177103448],
[0.47,3.05093793103],
[0.48,3.05619275862],
[0.49,3.07105413793],
[0.5,3.07809793103],
[0.6,2.98371689655],
[0.7,2.98245931034],
[0.8,3.05383642857],
[0.9,3.02403172414],
[1.0,3.00544137931],
[2.0,3.02625551724],
[2.6,3.05798642857],
[2.7,3.03454862069],
[2.8,3.06014862069],
[2.9,3.03690655172],
[3.0,3.02746689655],
[3.1,3.02365068966],
[3.2,3.0249637931],
[3.3,3.03231896552],
[3.4,3.04394931034],
[3.7,3.04429275862],
[4.0,3.04072862069],
[5.0,3.05115827586],
[6.0,3.060095],
[7.0,3.01851206897],
[8.0,3.02850448276],
[8.5,3.04083],
#ORI
#[0.2113,3.0239495],
#[0.22,3.0341905],
#[0.23,2.99252368421],
#[0.24,2.9560855],
#[0.25,3.044031],
#[0.26,3.0981965],
#[0.27,3.0435535],
#[0.28,2.980624],
#[0.29,3.0009445],
#[0.3,3.1337415],
#[0.31,2.9970915],
#[0.32,2.998981],
#[0.33,3.0172855],
#[0.34,3.1142125],
#[0.35,3.0145835],
#[0.36,3.011022],
#[0.37,3.0055665],
#[0.38,3.088784],
#[0.39,3.0205085],
#[0.4,2.976236],
#[0.41,3.0237105],
#[0.42,2.9981235],
#[0.43,3.0490625],
#[0.44,3.0080235],
#[0.45,3.129174],
#[0.46,3.047508],
#[0.47,2.975114],
#[0.48,3.120192],
#[0.49,3.155002],
#[0.5,3.047957],
#[0.6,3.158756],
#[0.7,2.973384],
#[0.8,3.079645],
#[0.9,3.091655],
#[1.0,3.0508315],
#[2.0,3.083786],
#[2.6,3.03393105263],
#[2.7,3.045937],
#[2.8,3.0458035],
#[2.9,3.0242345],
#[3.0,3.032068],
#[3.1,3.03100526316],
#[3.2,3.031052],
#[3.3,3.03268736842],
#[3.4,3.0196945],
#[3.7,3.0179485],
#[4.0,3.02182578947],
#[5.0,3.0349485],
#[6.0,3.0200295],
#[7.0,3.020286],
#[8.0,3.02428421053],
#[8.5,3.0215295],
#DIA=1
#[0.2113,3.00409214286],
#[0.22,3.07955285714],
#[0.23,3.019358],
#[0.24,3.009165],
#[0.25,3.01564533333],
#[0.26,2.97329923077],
#[0.27,3.04472333333],
#[0.28,2.99909214286],
#[0.29,2.94895857143],
#[0.3,3.10841785714],
#[0.31,2.97598933333],
#[0.32,3.03614571429],
#[0.33,3.10547538462],
#[0.34,3.047616],
#[0.35,3.00610714286],
#[0.36,2.93522928571],
#[0.37,3.00888923077],
#[0.38,2.99483166667],
#[0.39,2.92271153846],
#[0.4,2.96093076923],
#[0.41,2.95315642857],
#[0.42,3.02896230769],
#[0.43,3.30756],
#[0.44,3.57590571429],
#[0.45,4.737228],
#[0.46,4.75451538462],
#[0.47,4.73168615385],
#[0.48,4.64462928571],
#[0.49,4.72895866667],
#[0.5,4.61094785714],
#[0.6,4.652865],
#[0.7,3.15820076923],
#[0.8,3.03135714286],
#[0.9,3.00371928571],
#[1.0,2.92056153846],
#[2.0,3.03545333333],
#[2.6,3.03201153846],
#[2.7,3.03547615385],
#[2.8,3.02057214286],
#[2.9,3.09702636364],
#[3.0,3.306365],
#[3.1,3.71843583333],
#[3.2,3.26364571429],
#[3.3,3.03715090909],
#[3.4,2.99444714286],
#[3.7,3.10498666667],
#[4.0,3.04297583333],
#[5.0,3.03642266667],
#[6.0,3.062015625],
#[7.0,3.141395],
#[8.0,3.05044615385],
#[8.5,3.06385],
# DIA
#[0.2113,3.00493366667],
#[0.22,3.099052],
#[0.23,3.02846068966],
#[0.24,2.96574266667],
#[0.25,3.10093666667],
#[0.26,3.04057666667],
#[0.27,3.08050033333],
#[0.28,2.951124],
#[0.29,3.035237],
#[0.3,3.04365366667],
#[0.31,3.12570866667],
#[0.32,3.30790142857],
#[0.33,3.31683931034],
#[0.34,3.25592071429],
#[0.35,3.358586],
#[0.36,3.29340214286],
#[0.37,3.27229344828],
#[0.38,3.30337241379],
#[0.39,3.28878107143],
#[0.4,3.31590655172],
#[0.41,3.34692724138],
#[0.42,3.27102678571],
#[0.43,3.27748296296],
#[0.44,3.31255793103],
#[0.45,3.33260214286],
#[0.46,3.29155964286],
#[0.47,3.28368892857],
#[0.48,3.31190678571],
#[0.49,3.250975],
#[0.5,3.29477642857],
#[0.6,3.292922],
#[0.7,3.22164214286],
#[0.8,3.29829],
#[0.9,3.30984758621],
#[1.0,3.20037076923],
#[2.0,3.02449241379],
#[2.6,3.03290631579],
#[2.7,3.010652],
#[2.8,3.074281],
#[2.9,3.0930795],
#[3.0,3.62056206897],
#[3.1,4.251995],
#[3.2,3.3009915],
#[3.3,3.1343105],
#[3.4,3.087566],
#[3.7,3.035126],
#[4.0,3.06991766667],
#[5.0,3.03084166667],
#[6.0,3.02816166667],
#[7.0,3.04272],
#[8.0,3.00994166667],
#[8.5,3.06421966667],
]


